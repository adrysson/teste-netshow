version: '3.7'

services:
  app:
    build: .docker/php-fpm
    container_name: app-netshow-${APP_ENV}
    restart: always
    entrypoint: dockerize -wait tcp://db:3306 -timeout 40s ./.docker/entrypointDevelopment.sh
    environment:
      - PHP_OPCACHE_VALIDATE_TIMESTAMPS=1
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - db

  nginx:
    build: .docker/nginx
    entrypoint: dockerize -template ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf -wait tcp://app:9000 -timeout 40s nginx -g "daemon off";
    container_name: nginx-netshow-${APP_ENV}
    restart: always
    tty: true
    ports:
      - "${NGINX_PORT-80}:80"
    volumes:
      - .:/var/www
    networks:
      - app-network
    depends_on:
      - app

  db:
    image: mysql:5.7
    container_name: db-netshow-${APP_ENV}
    restart: always
    tty: true
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
    volumes:
      - ./.docker/mysql/dbdata:/var/lib/mysql
      - ./.docker/mysql:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT-3306}:3306"
    networks:
      - app-network
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-netshow-${APP_ENV}
    restart: 'always'
    links:
      - db
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    ports:
      - '${PMA_PORT-8080}:80'
    networks:
      - app-network
    volumes:
      - /sessions

networks:
  app-network:
    driver: bridge
